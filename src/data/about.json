[
    {
        "id": 1,
        "name": "Blackjack Reinforcement Learning",
        "icon": "images/examplespg-icons/blackjackPIC.png",
        "http": "https://github.com/ivangolovine/CPS-824-BlackJack",
        "textdc": [
            {
                "description": "Designed a blackjack environment in Python and use the gym, numpy, matplotlib.pyplot and mpl_toolkits libraries."
            },
            {
                "description": "Implemented the on policy method Monte Carlo"
            },
            {
                "description": "Tested every visit and first visit method with training episodes ranging from 100 to 1 million"
            },
            {
                "description": "Seeing how different values for epsilon and gamma affect the outcome"
            },
            {
                "description": "The success rate was measured via win, loss, draw ratio, by how close the agent got to the basic blackjack strategy"
            },
            {
                "description": "Wrote a professional findings report and created a visual representation of the outcomes with graphical output from the program to show the results"
            }
        ]
    },
    {
        "id": 2,
        "name": "Submarine Simulation",
        "icon": "images/examplespg-icons/submarinePIC.png",
        "http": "https://github.com/ivangolovine/Submarine_Comp_Graph",
        "textdc": [
            {
                "description": "Built using OpenGl, GLFW library and C++"
            },
            {
                "description": "Implemented submarine collision detection of terrain and objects"
            },
            {
                "description": "Texture-mapped objects on the ocean floor and terrain with intractable Gaussian blobs"
            },
            {
                "description": "Used vertex shader and fragment shader to render the scene"
            },
            {
                "description": "Multi-part submarine built in a hierarchical fashion and AI submarine"
            }
        ]
    },
    {
         "id": 3,
        "name": "Art Gallery Data Management System",
        "icon": "images/examplespg-icons/artgallicPIC.png",
        "http": "https://github.com/ivangolovine/ArtGallery",
        "textdc": [
            {
                "description": "Built using SQL Developer utilizing Oracle 11g, tested using APEX, and finalized using Java"
            },
            {
                "description": "Implemented BCNF, Normalization, and 3NF in order to increase data integrity"
            },
            {
                "description": "Added functionality such as searching artworks based on criteria, buying, and renting"
            }
        ]
    },
    {
        "id": 4,
        "name": "React Flask Website",
        "icon": "images/examplespg-icons/reactflaskPIC1.png",
        "http": "https://github.com/ivangolovine/react-flask-app",
        "textdc": [
            {
                "description": "Single Page Application using React and Flask"
            },
            {
                "description": "Implemented Dynamic Routing to all the pages with React"
            },
            {
                "description": "Created by using components, pages, dynamic content, CSS Modules, Bootstrap, JS and HTML"
            },
            {
                "description": "Used Json for the REST API implementation"
            },
            {
                "description": "Handled login request with Flask, login time, querying MySql and routing the response back"
            },
            {
                "description": "Set up a DigitalOcean server, and deployed by serving react/caching with Nginx and Flask with gunicorn."
            }
        ]
    },
    {
        "id": 6,
        "name": "Poker",
        "icon": "images/examplespg-icons/pokericPIC.png",
        "http": "https://github.com/ivangolovine/Poker2",
        "textdc": [
            {
                "description": "For this assignment, I had write a program that deals two two-card poker hands and a shared five card pool (the flop/turn/river) according to the rules of Texas Holdem poker. "
            },
            {
                "description": "The program determined the winning hand and returned it."
            },
            {
                "description": "I wrote this program in Elixir, Haskell and Smalltalk. "
            },
            {
                "description": "When determining the strength of each playerâ€™s hand, it considered the two cards that player was dealt, as well as the five cards present in the shared pool."
            }
        ]
    },
    {
        "id": 7,
        "name": "Portfolio",
        "icon": "images/examplespg-icons/portfolioicPIC.png",
        "http": "https://migdevelopment.ca",
        "textdc": [
            {
                "description": "The current website you are looking at was built using React and Flask"
            },
            {
                "description": "Implemented Dynamic Routing to all the pages with React"
            },
            {
                "description": "Created by using components, pages, dynamic content, CSS Modules, Bootstrap, JS and HTML"
            },
            {
                "description": "Used Json for the REST API implementation"
            },
            {
                "description": "Implemented an email client using python with SMTP, ssl and MIME."
            },
            {
                "description": "Added SSL to the NGINX server config with Let's Encrypt certbot."
            },
            {
                "description": "Set up a DigitalOcean server, and deployed by serving react/caching with Nginx and Flask with gunicorn."
            }
        ]
    }
]
